image: docker:19.03.12

variables:
  STAGING_REGISTRY: "registry.gitlab.com"
  DATABASE_URL: "postgresql://postgres:example@postgres:5432/postgres?schema=public"
  NEXTAUTH_URL: http://localhost:3000/api/auth
  ALLOW_REGISTRATION_FROM: bigdataboutique.com
  QUERY_EXPANDER_URL: http://localhost:8080
  GOOGLE_ID: "unset_google_id"
  GOOGLE_SECRET: "unset_google_secret"
  BUILDER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-builder

services:
  - docker:19.03.12-dind

before_script:
  - echo "$CI_BUILD_TOKEN" | docker login -u gitlab-ci-token --password-stdin $STAGING_REGISTRY
  - docker pull $BUILDER_IMAGE || true

stages:
  - build
  - test
  - dockerize


build:
  stage: build
  script:
    - docker build --cache-from $BUILDER_IMAGE --tag $BUILDER_IMAGE --target builder .


test:
  stage: test
  image: $BUILDER_IMAGE
  services:
    - postgres:12.2-alpine
  variables:
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: "example"
    POSTGRES_HOST_AUTH_METHOD: trust
  script:
    - yarn prisma migrate reset -f
    - yarn test
    
dockerize:
  stage: dockerize
  script:
    - RELEASE_IMAGE=$CI_REGISTRY_IMAGE:`date '+%Y-%m-%d-%H%M'`-${CI_COMMIT_SHA:0:9}
    - docker build --cache-from $BUILDER_IMAGE --tag $CI_REGISTRY_IMAGE:latest --tag $RELEASE_IMAGE .
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:latest $RELEASE_IMAGE
  # only:
  #   - master
