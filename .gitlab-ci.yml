image: docker:19.03.12

variables:
  STAGING_REGISTRY: "registry.gitlab.com"
  DATABASE_URL: "postgresql://postgres:example@postgres:5432/postgres?schema=public"
  NEXTAUTH_URL: http://localhost:3000/api/auth
  ALLOW_REGISTRATION_FROM: bigdataboutique.com
  QUERY_EXPANDER_URL: http://localhost:8080
  GOOGLE_ID: "unset_google_id"
  GOOGLE_SECRET: "unset_google_secret"
  DEPS_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-deps
  BUILDER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-builder
  LATEST_IMAGE: ${CI_REGISTRY_IMAGE}:latest

services:
  - docker:19.03.12-dind

before_script:
  - echo "$CI_BUILD_TOKEN" | docker login -u gitlab-ci-token --password-stdin $STAGING_REGISTRY
  - docker pull $LATEST_IMAGE || true
  - docker pull $BUILDER_IMAGE || true


stages:
  - build
  - test
  - dockerize

build:
  stage: build
  script:
    - docker build --cache-from $BUILDER_IMAGE --cache-from $LATEST_IMAGE --tag $BUILDER_IMAGE --target builder .
    - docker push $BUILDER_IMAGE


test:
  stage: test
  image: $BUILDER_IMAGE
  before_script: []
  services:
    - postgres:12.2-alpine
  variables:
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: "example"
    POSTGRES_HOST_AUTH_METHOD: trust
  script:
    - /bin/bash yarn prisma migrate reset -f
    - /bin/bash yarn test
    
dockerize:
  stage: dockerize
  script:
    - RELEASE_IMAGE=$CI_REGISTRY_IMAGE:`date '+%Y-%m-%d-%H%M'`-${CI_COMMIT_SHA:0:9}
    - docker build --cache-from $BUILDER_IMAGE --tag $LATEST_IMAGE --tag $RELEASE_IMAGE .
    - docker push $LATEST_IMAGE
    - docker push $RELEASE_IMAGE
  # only:
  #   - master
